import { serve } from "https://deno.land/std@0.168.0/http/server.ts"

const corsHeaders = {
  'Access-Control-Allow-Origin': '*',
  'Access-Control-Allow-Headers': 'authorization, x-client-info, apikey, content-type',
}

serve(async (req) => {
  if (req.method === 'OPTIONS') {
    return new Response(null, { headers: corsHeaders })
  }

  try {
    const { action, profileData } = await req.json()
    
    // –ü–æ–ª—É—á–∞–µ–º —Ä–∞–±–æ—á–∏–π —Ç–æ–∫–µ–Ω –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
    const token = Deno.env.get('MULTILOGIN_TOKEN')
    
    if (!token) {
      throw new Error('Multilogin —Ç–æ–∫–µ–Ω –Ω–µ –Ω–∞–π–¥–µ–Ω')
    }

    console.log(`üîÑ –í—ã–ø–æ–ª–Ω—è–µ–º –¥–µ–π—Å—Ç–≤–∏–µ: ${action}`)

    let result
    
    switch (action) {
      case 'create_profile':
        result = await createProfile(token, profileData)
        break
      case 'start_profile':
        result = await startProfile(token, profileData.profileId)
        break
      case 'stop_profile':
        result = await stopProfile(token, profileData.profileId)
        break
      case 'list_profiles':
        result = await listProfiles(token)
        break
      default:
        throw new Error(`–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ–µ –¥–µ–π—Å—Ç–≤–∏–µ: ${action}`)
    }

    return new Response(JSON.stringify({
      success: true,
      action,
      data: result,
      timestamp: new Date().toISOString()
    }), {
      headers: { ...corsHeaders, 'Content-Type': 'application/json' }
    })

  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ Multilogin API:', error)
    
    return new Response(JSON.stringify({
      success: false,
      error: error.message,
      timestamp: new Date().toISOString()
    }), {
      status: 500,
      headers: { ...corsHeaders, 'Content-Type': 'application/json' }
    })
  }
})

// –°–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤–æ–≥–æ –ø—Ä–æ—Ñ–∏–ª—è
async function createProfile(token: string, profileData: any) {
  console.log('üÜï –°–æ–∑–¥–∞–µ–º –ø—Ä–æ—Ñ–∏–ª—å:', profileData)
  
  const response = await fetch('https://api.multilogin.com/profile', {
    method: 'POST',
    headers: {
      'Authorization': `Bearer ${token}`,
      'Content-Type': 'application/json',
      'Accept': 'application/json'
    },
    body: JSON.stringify({
      name: profileData.name || `Profile_${Date.now()}`,
      os: profileData.os || 'win',
      browser: profileData.browser || 'mimic',
      platform: profileData.platform || 'instagram',
      ...profileData
    })
  })

  const result = await response.json()
  
  if (!response.ok) {
    throw new Error(`–û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –ø—Ä–æ—Ñ–∏–ª—è: ${JSON.stringify(result)}`)
  }

  console.log('‚úÖ –ü—Ä–æ—Ñ–∏–ª—å —Å–æ–∑–¥–∞–Ω:', result)
  return result
}

// –ó–∞–ø—É—Å–∫ –ø—Ä–æ—Ñ–∏–ª—è
async function startProfile(token: string, profileId: string) {
  console.log('‚ñ∂Ô∏è –ó–∞–ø—É—Å–∫–∞–µ–º –ø—Ä–æ—Ñ–∏–ª—å:', profileId)
  
  const response = await fetch(`https://api.multilogin.com/profile/${profileId}/start`, {
    method: 'GET',
    headers: {
      'Authorization': `Bearer ${token}`,
      'Accept': 'application/json'
    }
  })

  const result = await response.json()
  
  if (!response.ok) {
    throw new Error(`–û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ –ø—Ä–æ—Ñ–∏–ª—è: ${JSON.stringify(result)}`)
  }

  console.log('‚úÖ –ü—Ä–æ—Ñ–∏–ª—å –∑–∞–ø—É—â–µ–Ω:', result)
  return result
}

// –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø—Ä–æ—Ñ–∏–ª—è
async function stopProfile(token: string, profileId: string) {
  console.log('‚èπÔ∏è –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø—Ä–æ—Ñ–∏–ª—å:', profileId)
  
  const response = await fetch(`https://api.multilogin.com/profile/${profileId}/stop`, {
    method: 'GET',
    headers: {
      'Authorization': `Bearer ${token}`,
      'Accept': 'application/json'
    }
  })

  const result = await response.json()
  
  if (!response.ok) {
    throw new Error(`–û—à–∏–±–∫–∞ –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ –ø—Ä–æ—Ñ–∏–ª—è: ${JSON.stringify(result)}`)
  }

  console.log('‚úÖ –ü—Ä–æ—Ñ–∏–ª—å –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω:', result)
  return result
}

// –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –ø—Ä–æ—Ñ–∏–ª–µ–π
async function listProfiles(token: string) {
  console.log('üìã –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –ø—Ä–æ—Ñ–∏–ª–µ–π')
  
  const response = await fetch('https://api.multilogin.com/profile', {
    method: 'GET',
    headers: {
      'Authorization': `Bearer ${token}`,
      'Accept': 'application/json'
    }
  })

  const result = await response.json()
  
  if (!response.ok) {
    throw new Error(`–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –ø—Ä–æ—Ñ–∏–ª–µ–π: ${JSON.stringify(result)}`)
  }

  console.log('‚úÖ –°–ø–∏—Å–æ–∫ –ø—Ä–æ—Ñ–∏–ª–µ–π –ø–æ–ª—É—á–µ–Ω:', result)
  return result
}