import { serve } from "https://deno.land/std@0.168.0/http/server.ts"

const corsHeaders = {
  'Access-Control-Allow-Origin': '*',
  'Access-Control-Allow-Headers': 'authorization, x-client-info, apikey, content-type',
}

serve(async (req) => {
  if (req.method === 'OPTIONS') {
    return new Response(null, { headers: corsHeaders })
  }

  try {
    // –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º —Ç–æ–ª—å–∫–æ POST –∑–∞–ø—Ä–æ—Å—ã –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
    if (req.method !== 'POST') {
      return new Response(JSON.stringify({
        error: '–ú–µ—Ç–æ–¥ –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è',
        message: '–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ POST –∑–∞–ø—Ä–æ—Å –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è'
      }), {
        status: 405,
        headers: { ...corsHeaders, 'Content-Type': 'application/json' }
      })
    }

    const email = Deno.env.get('MULTILOGIN_EMAIL') || 'thailandislive@gmail.com'
    const password = Deno.env.get('MULTILOGIN_PASSWORD') || 'multilogin4815A!'
    
    console.log('üîÑ –¢–µ—Å—Ç–∏—Ä—É–µ–º —Ä–∞–∑–Ω—ã–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã Multilogin API...')
    
    const testResults = []
    
    // –í–∞—Ä–∏–∞–Ω—Ç 1: –ü—Ä–∞–≤–∏–ª—å–Ω—ã–π launcher API endpoint  
    try {
      console.log('üì° –¢–µ—Å—Ç 1: launcher-api.multilogin.com/api/v1/signin')
      const response1 = await fetch('https://launcher-api.multilogin.com/api/v1/signin', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
          'Accept': 'application/json'
        },
        body: JSON.stringify({
          email: email,
          password: password
        })
      })
      
      const result1 = {
        endpoint: 'launcher-api.multilogin.com/api/v1/signin',
        status: response1.status,
        ok: response1.ok,
        response: await response1.text()
      }
      
      testResults.push(result1)
      console.log('üìä –†–µ–∑—É–ª—å—Ç–∞—Ç 1:', result1)
      
    } catch (error) {
      testResults.push({
        endpoint: 'launcher-api.multilogin.com/api/v1/signin',
        error: error.message
      })
    }
    
    // –í–∞—Ä–∏–∞–Ω—Ç 2: accounts-api
    try {
      console.log('üì° –¢–µ—Å—Ç 2: accounts-api.multilogin.com/api/v1/signin')
      const response2 = await fetch('https://accounts-api.multilogin.com/api/v1/signin', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
          'Accept': 'application/json'
        },
        body: JSON.stringify({
          email: email,
          password: password
        })
      })
      
      const result2 = {
        endpoint: 'accounts-api.multilogin.com/api/v1/signin',
        status: response2.status,
        ok: response2.ok,
        response: await response2.text()
      }
      
      testResults.push(result2)
      console.log('üìä –†–µ–∑—É–ª—å—Ç–∞—Ç 2:', result2)
      
    } catch (error) {
      testResults.push({
        endpoint: 'accounts-api.multilogin.com/api/v1/signin',
        error: error.message
      })
    }
    
    // –í–∞—Ä–∏–∞–Ω—Ç 3: –ü–æ–ø—Ä–æ–±—É–µ–º —Ä–∞–∑–Ω—ã–µ —Ñ–æ—Ä–º–∞—Ç—ã –¥–ª—è api.multilogin.com/user/signin
    try {
      console.log('üì° –¢–µ—Å—Ç 3: api.multilogin.com/user/signin (—Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç)')
      const response3 = await fetch('https://api.multilogin.com/user/signin', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
          'Accept': 'application/json'
        },
        body: JSON.stringify({
          email: email,
          password: password
        })
      })
      
      const result3 = {
        endpoint: 'api.multilogin.com/user/signin (—Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π)',
        status: response3.status,
        ok: response3.ok,
        response: await response3.text()
      }
      
      testResults.push(result3)
      console.log('üìä –†–µ–∑—É–ª—å—Ç–∞—Ç 3:', result3)
      
    } catch (error) {
      testResults.push({
        endpoint: 'api.multilogin.com/user/signin (—Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π)',
        error: error.message
      })
    }
    
    // –í–∞—Ä–∏–∞–Ω—Ç 3b: –ü–æ–ø—Ä–æ–±—É–µ–º —Å –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–º–∏ –ø–æ–ª—è–º–∏
    try {
      console.log('üì° –¢–µ—Å—Ç 3b: api.multilogin.com/user/signin (—Å –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–º–∏ –ø–æ–ª—è–º–∏)')
      const response3b = await fetch('https://api.multilogin.com/user/signin', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
          'Accept': 'application/json',
          'User-Agent': 'MultiloginAPI/1.0'
        },
        body: JSON.stringify({
          email: email,
          password: password,
          version: "6.0",
          os: "windows"
        })
      })
      
      const result3b = {
        endpoint: 'api.multilogin.com/user/signin (—Ä–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–π)',
        status: response3b.status,
        ok: response3b.ok,
        response: await response3b.text()
      }
      
      testResults.push(result3b)
      console.log('üìä –†–µ–∑—É–ª—å—Ç–∞—Ç 3b:', result3b)
      
    } catch (error) {
      testResults.push({
        endpoint: 'api.multilogin.com/user/signin (—Ä–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–π)',
        error: error.message
      })
    }
    
    // –í–∞—Ä–∏–∞–Ω—Ç 3c: –ü–æ–ø—Ä–æ–±—É–µ–º POST form data
    try {
      console.log('üì° –¢–µ—Å—Ç 3c: api.multilogin.com/user/signin (form data)')
      const formData = new URLSearchParams()
      formData.append('email', email)
      formData.append('password', password)
      
      const response3c = await fetch('https://api.multilogin.com/user/signin', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/x-www-form-urlencoded',
          'Accept': 'application/json'
        },
        body: formData
      })
      
      const result3c = {
        endpoint: 'api.multilogin.com/user/signin (form data)',
        status: response3c.status,
        ok: response3c.ok,
        response: await response3c.text()
      }
      
      testResults.push(result3c)
      console.log('üìä –†–µ–∑—É–ª—å—Ç–∞—Ç 3c:', result3c)
      
    } catch (error) {
      testResults.push({
        endpoint: 'api.multilogin.com/user/signin (form data)',
        error: error.message
      })
    }
    
    // –í–∞—Ä–∏–∞–Ω—Ç 4: –ü—Ä—è–º–æ–π API –¥–ª—è —Ç–æ–∫–µ–Ω–∞ 
    try {
      console.log('üì° –¢–µ—Å—Ç 4: api.multilogin.com/user/auth')
      const response4 = await fetch('https://api.multilogin.com/user/auth', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
          'Accept': 'application/json'
        },
        body: JSON.stringify({
          email: email,
          password: password
        })
      })
      
      const result4 = {
        endpoint: 'api.multilogin.com/user/auth',
        status: response4.status,
        ok: response4.ok,
        response: await response4.text()
      }
      
      testResults.push(result4)
      console.log('üìä –†–µ–∑—É–ª—å—Ç–∞—Ç 4:', result4)
      
    } catch (error) {
      testResults.push({
        endpoint: 'api.multilogin.com/user/auth',
        error: error.message
      })
    }
    
    return new Response(JSON.stringify({
      success: true,
      message: '–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ Multilogin API –∑–∞–≤–µ—Ä—à–µ–Ω–æ',
      credentials: {
        email: email,
        password_length: password.length
      },
      results: testResults,
      timestamp: new Date().toISOString()
    }), {
      status: 200,
      headers: { ...corsHeaders, 'Content-Type': 'application/json' }
    })
    
  } catch (error) {
    console.error('üí• –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è:', error)
    
    return new Response(JSON.stringify({
      success: false,
      error: '–û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è API',
      message: error.message,
      timestamp: new Date().toISOString()
    }), {
      status: 500,
      headers: { ...corsHeaders, 'Content-Type': 'application/json' }
    })
  }
})